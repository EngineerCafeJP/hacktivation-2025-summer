---
description: Serena MCP使用ガイドライン - 複雑なコード解析とアーキテクチャ理解の際の推奨ツール
alwaysApply: true
---

# Serena MCP使用ガイドライン

## 基本方針

- **複雑なコード解析**や**アーキテクチャ理解**が必要な場面では積極的にSerenaを使用する
- Serena MCPの機能を活用して効率的で正確なコード分析を心がける
- 実際に使われているコードを使用例として示すときは、ファイルのインデックスと行数を明記する

## Serena推奨場面

以下のような場面では、通常のツールよりもSerena MCPを優先的に使用すること：

- **コードベース全体の構造理解**
  - プロジェクトの全体像を把握する必要がある場合
  - ディレクトリ構造やモジュール間の関係を理解する場合

- **シンボル間の参照関係調査**
  - クラス、関数、変数がどこで定義され、どこで使用されているかを調べる場合
  - 依存関係グラフを理解する必要がある場合

- **クラス・関数・変数の使用箇所特定**
  - 特定のシンボルが参照されているすべての場所を見つける場合
  - リファクタリングの影響範囲を確認する場合

- **ファイル間の依存関係分析**
  - importやexportの関係を理解する場合
  - モジュール間の結合度を調査する場合

- **大規模リファクタリングの影響範囲調査**
  - 変更が波及する範囲を事前に把握する場合
  - 安全にリファクタリングを実行するための準備

- **設計パターンの実装箇所探索**
  - 特定のパターンがどこで使われているかを調べる場合
  - コードの一貫性を確認する場合

- **バグの原因となる関連コード特定**
  - エラーの根本原因を追跡する場合
  - 関連する処理フローを理解する場合

## 通常ツール推奨場面

以下のような単純なタスクでは、通常のツールを使用すること：

- 単純なファイル読み込み・編集
- 既知のファイル・関数への直接的な変更
- シンプルな文字列検索・置換

## プロジェクト固有の注意事項

- このプロジェクトはNext.jsアプリケーション
- TypeScriptを使用
- S3ストレージとの連携機能あり
- Firebase認証を使用
